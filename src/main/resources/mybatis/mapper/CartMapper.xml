<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace用于指定当前的映射文件和哪个接口进行映射,需要指定接口的文件路径,路径需要是包的完整路径结构-->
<mapper namespace="com.learn.springboot_learn_computerstore.mapper.CartMapper">
    <resultMap id="CartEntityMap" type="com.learn.springboot_learn_computerstore.entity.Cart">
        <id column="cid" property="cid"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!--Cart queryCartByUidAndPid(Integer uid, @Param("pid") Integer pid);-->
    <select id="queryCartByUidAndPid" resultMap="CartEntityMap">
        select * from t_cart where uid = #{uid} and pid = #{pid}
    </select>

    <!--    int updateCartInfo(Cart cart);-->
    <update id="updateCartInfo" parameterType="com.learn.springboot_learn_computerstore.entity.Cart">
        update t_cart set num = #{num},modified_user = #{modifiedUser},modified_time = #{modifiedTime}
                          where cid = #{cid}
    </update>

    <!--    int addCart(Cart cart);-->
    <insert id="addCart">
        insert into t_cart(uid,pid,price,num,created_user,created_time,modified_user,modified_time)
                          values(#{uid},#{pid},#{price},#{num},
                                 #{createdUser},#{createdTime},
                                 #{modifiedUser},#{modifiedTime}
                                 )
    </insert>

    <!--    List<Cart> queryAllCartsByUid(Integer uid);-->
    <select id="queryAllCartsByUid" resultType="com.learn.springboot_learn_computerstore.vo.CartVo">
        SELECT c.cid,c.pid,c.`uid`,c.price,c.num,p.title,p.image,p.`price` AS real_price
                                                FROM t_cart c LEFT JOIN t_product p
                                                ON c.pid = p.`id`
                                                WHERE c.`uid` = #{uid}
                                                order by c.created_time desc
    </select>

    <!--     Cart queryCartByCid(Integer cid);-->
    <select id="queryCartByCid" resultType="com.learn.springboot_learn_computerstore.entity.Cart">
            select * from t_cart where cid = #{cid};
    </select>

    <!--    int UpdateCartNumByCid(Integer num,String modifiedUser, Date modifiedTime,Integer cid);-->
    <update id="UpdateCartNumByCid" >
        update t_cart set num = #{num},modified_user = #{modifiedUser},modified_time = #{modifiedTime}
                          where cid = #{cid}
    </update>

    <!--    CartVo queryCartVoByCid(Integer cid);-->
    <select id="queryCartVoByCid" resultType="com.learn.springboot_learn_computerstore.vo.CartVo">
        SELECT c.cid,c.pid,c.`uid`,c.price,c.num,p.title,p.image,p.`price` AS real_price
                                                FROM t_cart c LEFT JOIN t_product p
                                                ON c.pid = p.`id`
                                                WHERE c.`cid` = #{cid}
                                                order by c.created_time desc
    </select>

    <!--    int deleteCartByCid(Integer cid);-->
    <delete id="deleteCartByCid">
        delete from t_cart where cid = #{cid}
    </delete>

    <!--    int deleteCartByUidAndPid(Integer uid,Integer pid);-->
    <delete id="deleteCartByUidAndPid">
        DELETE FROM t_cart WHERE uid = #{uid} AND pid = #{pid}
    </delete>
    
</mapper>